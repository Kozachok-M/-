с C++ на Java
import java.util.Arrays;

public class ShellSort {
    
    // Функция для сортировки Шелла
    public static void shellSort(int[] arr) {
        int n = arr.length;
        
        // Начинаем с большого промежутка и уменьшаем его
        for (int gap = n / 2; gap > 0; gap /= 2) {
            // Проходим по всем элементам с текущим промежутком
            for (int i = gap; i < n; i++) {
                // Сохраняем текущий элемент
                int temp = arr[i];
                int j;
                
                // Сдвигаем элементы, которые больше temp, вправо
                for (j = i; j >= gap && arr[j - gap] > temp; j -= gap) {
                    arr[j] = arr[j - gap];
                }
                
                // Вставляем temp на правильное место
                arr[j] = temp;
            }
        }
    }
    
    // Функция для вывода массива
    public static void printArray(int[] arr) {
        for (int num : arr) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
    
    public static void main(String[] args) {
        // Пример использования
        int[] arr = {12, 34, 54, 2, 3};
        
        System.out.print("Исходный массив: ");
        printArray(arr);
        
        shellSort(arr);
        
        System.out.print("Отсортированный массив: ");
        printArray(arr);
    }
}

c C++ на python

def shell_sort(arr):
    """
    Функция для сортировки Шелла
    """
    n = len(arr)
    
    # Начинаем с большого промежутка и уменьшаем его
    gap = n // 2
    while gap > 0:
        # Проходим по всем элементам с текущим промежутком
        for i in range(gap, n):
            # Сохраняем текущий элемент
            temp = arr[i]
            j = i
            
            # Сдвигаем элементы, которые больше temp, вправо
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap
            
            # Вставляем temp на правильное место
            arr[j] = temp
        
        # Уменьшаем промежуток
        gap //= 2

def print_array(arr):
    """
    Функция для вывода массива
    """
    for num in arr:
        print(num, end=" ")
    print()

# Пример использования
if __name__ == "__main__":
    arr = [12, 34, 54, 2, 3]
    
    print("Исходный массив: ", end="")
    print_array(arr)
    
    shell_sort(arr)
    
    print("Отсортированный массив: ", end="")
    print_array(arr)
